package edu.rice.comp610.model;

import java.util.Arrays;
import java.util.Objects;
import java.util.UUID;

/**
 * A user's account information. Includes the following fields.
 *
 * <ul>
 * <li> id - a unique identifier generated by the system. Not to be shared with the user.</li>
 * <li> alias - the user's chosen login name (must be unique in the system)</li>
 * <li> email - the user's email address (must be unique in the system)</li>
 * <li> givenName - the user's given name</li>
 * <li> surname - the user's surname</li>
 * <li> password - the password selected by the user</li>
 * <li> lastPassword - the most recent previous password set by the user. Used to check against new passwords to
 * prevent reusing passwords.</li>
 * <li> image - a profile picture uploaded by the user</li>
 * </ul>
 *
 */
public class Account {

    private UUID id;
    private String alias;
    private String email;
    private String givenName;
    private String surname;
    private String password;
    private String lastPassword;
    private byte[] image;

    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    public String getAlias() {
        return alias;
    }

    public void setAlias(String alias) {
        this.alias = alias;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getGivenName() {
        return givenName;
    }

    public void setGivenName(String givenName) {
        this.givenName = givenName;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getLastPassword() {
        return lastPassword;
    }

    public void setLastPassword(String lastPassword) {
        this.lastPassword = lastPassword;
    }

    public byte[] getImage() {
        return image;
    }

    public void setImage(byte[] image) {
        this.image = image;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Account account = (Account) o;
        return Objects.equals(id, account.id)
                && Objects.equals(alias, account.alias)
                && Objects.equals(email, account.email)
                && Objects.equals(givenName, account.givenName)
                && Objects.equals(surname, account.surname)
                && Objects.equals(password, account.password)
                && Objects.equals(lastPassword, account.lastPassword)
                && Arrays.equals(image, account.image);
    }

    @Override
    public int hashCode() {
        return Objects.hash(alias, email, givenName, surname, password, lastPassword, Arrays.hashCode(image));
    }

    @Override
    public String toString() {
        return "Account{" +
                "id=" + id +
                ", alias='" + alias + '\'' +
                ", email='" + email + '\'' +
                ", givenName='" + givenName + '\'' +
                ", surname='" + surname + '\'' +
                ", password='" + password + '\'' +
                ", lastPassword='" + lastPassword + '\'' +
                ", image=" + Arrays.toString(image) +
                '}';
    }
}
